{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "covid19-synapse-mmmyb3wbpezyk"
		},
		"AzureDataLakeStorage_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage'"
		},
		"AzureDataLakeStorage1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage1'"
		},
		"AzureSqlDatabase_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase'"
		},
		"CosmosDb1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'CosmosDb1'"
		},
		"SQLServerVM_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SQLServerVM'"
		},
		"covid19-synapse-mmmyb3wbpezyk-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'covid19-synapse-mmmyb3wbpezyk-WorkspaceDefaultSqlServer'"
		},
		"AzureDataLakeStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://hackgen2team6.dfs.core.windows.net"
		},
		"AzureDataLakeStorage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://hackgen2team6.dfs.core.windows.net"
		},
		"covid19-synapse-mmmyb3wbpezyk-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://covid19mmmyb3wbpezyk.dfs.core.windows.net"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/CopySQLData')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "ForEach_giz",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.cw_items",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy_giz",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "dbo.@{item().source.table}"
										},
										{
											"name": "Destination",
											"value": "srcazsql//@{item().destination.fileName}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"validateDataConsistency": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Info",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "AzureDataLakeStorage",
													"type": "LinkedServiceReference"
												},
												"path": "srcazsql/copy_log"
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SourceDataset_giz",
											"type": "DatasetReference",
											"parameters": {
												"cw_table": "@item().source.table"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DestinationDataset_giz",
											"type": "DatasetReference",
											"parameters": {
												"cw_fileName": "@item().destination.fileName"
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"cw_items": {
						"type": "Array",
						"defaultValue": [
							{
								"source": {
									"table": "Country"
								},
								"destination": {
									"fileName": "dboCountry"
								}
							},
							{
								"source": {
									"table": "Covid19_Metrics"
								},
								"destination": {
									"fileName": "dboCovid19_Metrics"
								}
							},
							{
								"source": {
									"table": "Covid19_Metrics_All"
								},
								"destination": {
									"fileName": "dboCovid19_Metrics_All"
								}
							},
							{
								"source": {
									"table": "Dates"
								},
								"destination": {
									"fileName": "dboDates"
								}
							}
						]
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-03-16T19:16:48Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/SourceDataset_giz')]",
				"[concat(variables('workspaceId'), '/datasets/DestinationDataset_giz')]",
				"[concat(variables('workspaceId'), '/linkedServices/AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Copy_CosmoDB')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy_evs",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "covidpolicy"
							},
							{
								"name": "Destination",
								"value": "srccosmosdb//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "CosmosDbSqlApiSource",
								"preferredRegions": []
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": true,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "AzureDataLakeStorage1",
										"type": "LinkedServiceReference"
									},
									"path": "srccosmosdb/Cosmo_Logs"
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['countryname']"
										},
										"sink": {
											"ordinal": 1
										}
									},
									{
										"source": {
											"path": "$['countrycode']"
										},
										"sink": {
											"ordinal": 2
										}
									},
									{
										"source": {
											"path": "$['date']"
										},
										"sink": {
											"ordinal": 3
										}
									},
									{
										"source": {
											"path": "$['c1_school_closing']"
										},
										"sink": {
											"ordinal": 4
										}
									},
									{
										"source": {
											"path": "$['c1_flag']"
										},
										"sink": {
											"ordinal": 5
										}
									},
									{
										"source": {
											"path": "$['c2_workplace_closing']"
										},
										"sink": {
											"ordinal": 6
										}
									},
									{
										"source": {
											"path": "$['c2_flag']"
										},
										"sink": {
											"ordinal": 7
										}
									},
									{
										"source": {
											"path": "$['c3_cancel_public_events']"
										},
										"sink": {
											"ordinal": 8
										}
									},
									{
										"source": {
											"path": "$['c3_flag']"
										},
										"sink": {
											"ordinal": 9
										}
									},
									{
										"source": {
											"path": "$['c4_restrictions_on_gatherings']"
										},
										"sink": {
											"ordinal": 10
										}
									},
									{
										"source": {
											"path": "$['c4_flag']"
										},
										"sink": {
											"ordinal": 11
										}
									},
									{
										"source": {
											"path": "$['c5_close_public_transport']"
										},
										"sink": {
											"ordinal": 12
										}
									},
									{
										"source": {
											"path": "$['c5_flag']"
										},
										"sink": {
											"ordinal": 13
										}
									},
									{
										"source": {
											"path": "$['c6_stay_at_home_requirements']"
										},
										"sink": {
											"ordinal": 14
										}
									},
									{
										"source": {
											"path": "$['c6_flag']"
										},
										"sink": {
											"ordinal": 15
										}
									},
									{
										"source": {
											"path": "$['c7_restrictions_on_internal_movement']"
										},
										"sink": {
											"ordinal": 16
										}
									},
									{
										"source": {
											"path": "$['c7_flag']"
										},
										"sink": {
											"ordinal": 17
										}
									},
									{
										"source": {
											"path": "$['c8_international_travel_controls']"
										},
										"sink": {
											"ordinal": 18
										}
									},
									{
										"source": {
											"path": "$['e1_income_support']"
										},
										"sink": {
											"ordinal": 19
										}
									},
									{
										"source": {
											"path": "$['e1_flag']"
										},
										"sink": {
											"ordinal": 20
										}
									},
									{
										"source": {
											"path": "$['e2_debt/contract_relief']"
										},
										"sink": {
											"ordinal": 21
										}
									},
									{
										"source": {
											"path": "$['e3_fiscal_measures']"
										},
										"sink": {
											"ordinal": 22
										}
									},
									{
										"source": {
											"path": "$['e4_international_support']"
										},
										"sink": {
											"ordinal": 23
										}
									},
									{
										"source": {
											"path": "$['h1_public_information_campaigns']"
										},
										"sink": {
											"ordinal": 24
										}
									},
									{
										"source": {
											"path": "$['h1_flag']"
										},
										"sink": {
											"ordinal": 25
										}
									},
									{
										"source": {
											"path": "$['h2_testing_policy']"
										},
										"sink": {
											"ordinal": 26
										}
									},
									{
										"source": {
											"path": "$['h3_contact_tracing']"
										},
										"sink": {
											"ordinal": 27
										}
									},
									{
										"source": {
											"path": "$['h4_emergency_investment_in_healthcare']"
										},
										"sink": {
											"ordinal": 28
										}
									},
									{
										"source": {
											"path": "$['h5_investment_in_vaccines']"
										},
										"sink": {
											"ordinal": 29
										}
									},
									{
										"source": {
											"path": "$['m1_wildcard']"
										},
										"sink": {
											"ordinal": 30
										}
									},
									{
										"source": {
											"path": "$['confirmedcases']"
										},
										"sink": {
											"ordinal": 31
										}
									},
									{
										"source": {
											"path": "$['confirmeddeaths']"
										},
										"sink": {
											"ordinal": 32
										}
									},
									{
										"source": {
											"path": "$['stringencyindex']"
										},
										"sink": {
											"ordinal": 33
										}
									},
									{
										"source": {
											"path": "$['stringencyindexfordisplay']"
										},
										"sink": {
											"ordinal": 34
										}
									},
									{
										"source": {
											"path": "$['legacystringencyindex']"
										},
										"sink": {
											"ordinal": 35
										}
									},
									{
										"source": {
											"path": "$['legacystringencyindexfordisplay']"
										},
										"sink": {
											"ordinal": 36
										}
									},
									{
										"source": {
											"path": "$['iso_country']"
										},
										"sink": {
											"ordinal": 37
										}
									},
									{
										"source": {
											"path": "$['load_date']"
										},
										"sink": {
											"ordinal": 38
										}
									},
									{
										"source": {
											"path": "$['id']"
										},
										"sink": {
											"ordinal": 39
										}
									},
									{
										"source": {
											"path": "$['_rid']"
										},
										"sink": {
											"ordinal": 40
										}
									},
									{
										"source": {
											"path": "$['_self']"
										},
										"sink": {
											"ordinal": 41
										}
									},
									{
										"source": {
											"path": "$['_etag']"
										},
										"sink": {
											"ordinal": 42
										}
									},
									{
										"source": {
											"path": "$['_attachments']"
										},
										"sink": {
											"ordinal": 43
										}
									},
									{
										"source": {
											"path": "$['_ts']"
										},
										"sink": {
											"ordinal": 44
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_evs",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_evs",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-03-16T19:38:56Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/SourceDataset_evs')]",
				"[concat(variables('workspaceId'), '/datasets/DestinationDataset_evs')]",
				"[concat(variables('workspaceId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Copy_VM')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "ForEach_vhv",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.cw_items",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy_vhv",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "dbo.@{item().source.table}"
										},
										{
											"name": "Destination",
											"value": "srcvm//@{item().destination.fileName}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"validateDataConsistency": true,
										"logSettings": {
											"enableCopyActivityLog": true,
											"copyActivityLogSettings": {
												"logLevel": "Warning",
												"enableReliableLogging": false
											},
											"logLocationSettings": {
												"linkedServiceName": {
													"referenceName": "AzureDataLakeStorage",
													"type": "LinkedServiceReference"
												},
												"path": "srcvm"
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SourceDataset_vhv",
											"type": "DatasetReference",
											"parameters": {
												"cw_table": "@item().source.table"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DestinationDataset_vhv",
											"type": "DatasetReference",
											"parameters": {
												"cw_fileName": "@item().destination.fileName"
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"cw_items": {
						"type": "Array",
						"defaultValue": [
							{
								"source": {
									"table": "Country"
								},
								"destination": {
									"fileName": "dboCountry"
								}
							},
							{
								"source": {
									"table": "Covid19_Metrics"
								},
								"destination": {
									"fileName": "dboCovid19_Metrics"
								}
							},
							{
								"source": {
									"table": "Covid19_Metrics_All"
								},
								"destination": {
									"fileName": "dboCovid19_Metrics_All"
								}
							},
							{
								"source": {
									"table": "Dates"
								},
								"destination": {
									"fileName": "dboDates"
								}
							}
						]
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/SourceDataset_vhv')]",
				"[concat(variables('workspaceId'), '/datasets/DestinationDataset_vhv')]",
				"[concat(variables('workspaceId'), '/linkedServices/AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DestinationDataset_evs')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "srccosmosdb"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DestinationDataset_giz')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_fileName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().cw_fileName",
							"type": "Expression"
						},
						"fileSystem": "srcazsql"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DestinationDataset_vhv')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_fileName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().cw_fileName",
							"type": "Expression"
						},
						"fileSystem": "srcvm"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SourceDataset_evs')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CosmosDb1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {
					"type": "object",
					"properties": {
						"countryname": {
							"type": "string"
						},
						"countrycode": {
							"type": "string"
						},
						"date": {
							"type": "string"
						},
						"c1_school_closing": {
							"type": "integer"
						},
						"c1_flag": {
							"type": "boolean"
						},
						"c2_workplace_closing": {
							"type": "integer"
						},
						"c2_flag": {
							"type": "boolean"
						},
						"c3_cancel_public_events": {
							"type": "integer"
						},
						"c3_flag": {
							"type": "boolean"
						},
						"c4_restrictions_on_gatherings": {
							"type": "integer"
						},
						"c4_flag": {
							"type": "boolean"
						},
						"c5_close_public_transport": {
							"type": "integer"
						},
						"c5_flag": {
							"type": "boolean"
						},
						"c6_stay_at_home_requirements": {
							"type": "integer"
						},
						"c6_flag": {
							"type": "boolean"
						},
						"c7_restrictions_on_internal_movement": {
							"type": "integer"
						},
						"c7_flag": {
							"type": "boolean"
						},
						"c8_international_travel_controls": {
							"type": "integer"
						},
						"e1_income_support": {
							"type": "integer"
						},
						"e1_flag": {
							"type": "boolean"
						},
						"e2_debt/contract_relief": {
							"type": "integer"
						},
						"e3_fiscal_measures": {
							"type": "integer"
						},
						"e4_international_support": {
							"type": "integer"
						},
						"h1_public_information_campaigns": {
							"type": "integer"
						},
						"h1_flag": {
							"type": "boolean"
						},
						"h2_testing_policy": {
							"type": "integer"
						},
						"h3_contact_tracing": {
							"type": "integer"
						},
						"h4_emergency_investment_in_healthcare": {
							"type": "integer"
						},
						"h5_investment_in_vaccines": {
							"type": "integer"
						},
						"m1_wildcard": {
							"type": "null"
						},
						"confirmedcases": {
							"type": "null"
						},
						"confirmeddeaths": {
							"type": "null"
						},
						"stringencyindex": {
							"type": "integer"
						},
						"stringencyindexfordisplay": {
							"type": "integer"
						},
						"legacystringencyindex": {
							"type": "null"
						},
						"legacystringencyindexfordisplay": {
							"type": "null"
						},
						"iso_country": {
							"type": "string"
						},
						"load_date": {
							"type": "string"
						}
					}
				},
				"typeProperties": {
					"collectionName": "covidpolicy"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/CosmosDb1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SourceDataset_giz')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_table": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().cw_table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SourceDataset_vhv')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQLServerVM",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_table": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().cw_table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/SQLServerVM')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureDataLakeStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage_accountKey')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureDataLakeStorage1')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage1_accountKey')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureSqlDatabase')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CosmosDb1')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "CosmosDb",
				"typeProperties": {
					"connectionString": "[parameters('CosmosDb1_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQLServerVM')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SQLServerVM_connectionString')]"
				},
				"connectVia": {
					"referenceName": "Team6IR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/Team6IR')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/covid19-synapse-mmmyb3wbpezyk-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('covid19-synapse-mmmyb3wbpezyk-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/covid19-synapse-mmmyb3wbpezyk-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('covid19-synapse-mmmyb3wbpezyk-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Team6IR')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		}
	]
}